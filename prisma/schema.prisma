generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                     String         @id
  name                   String?
  picture                String?
  sessions               Session[]
  gangId                 Int?
  gang                   Gang?          @relation("GangId", fields: [gangId], references: [id])
  role                   String         @default("USER")
  subscription           String?
  notificationAddedBy    Notification[] @relation("AddedBy")
  notificationReviewedBy Notification[] @relation("ReviewedBy")
  notifications          Notification[]
  gangsVisited           Gang[]         @relation("GangsVisited")
}

model Session {
  id         String   @id
  user_id    String
  user       User     @relation(references: [id], fields: [user_id], onDelete: Cascade)
  expires_at DateTime
}

model Gang {
  id            Int            @id @default(autoincrement())
  name          String
  latitude      Float
  longitude     Float
  members       User[]         @relation("GangId")
  status        String         @default("PENDING")
  notifications Notification[]
  visitedBy     User[]         @relation("GangsVisited")
}

model Notification {
  id               Int      @id @default(autoincrement())
  title            String
  body             String
  type             String?
  addedByUserId    String?
  reviewedByUserId String?
  addedBy          User?    @relation("AddedBy", fields: [addedByUserId], references: [id])
  reviewedBy       User?    @relation("ReviewedBy", fields: [reviewedByUserId], references: [id])
  relatedGangId    Int?
  relatedGang      Gang?    @relation(fields: [relatedGangId], references: [id])
  status           String   @default("PENDING")
  createdAt        DateTime @default(now())
  users            User[]
}
